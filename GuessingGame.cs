// Source: https://www.sanfoundry.com/csharp-program-performs-number-guessing-game/
// C# Program to Perform a Number Guessing Game
// Author: Manish Bhojasia
// Student: Joseph Hong
// Synopsis: This is a program where the user guesses a number between 1
//           and 100.

using System;

class Program
{
    static void Main(string[] args)
    {
        // Variables to store user specified integers for
        // min and max range to generate a random number.
        int x, y;

        Console.WriteLine("Welcome to a Guessing Game. Please \n" +
                          "Enter a minimum number greater than 0:");

        // Convert the string value to type int for both min
        // and max
        x = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Now please enter a maximum number: ");
        y = Convert.ToInt32(Console.ReadLine());

        Console.WriteLine("Generating a random number...");

        // The beginning of a loop and allows the program to run continously
        // until the statement ends up being false (which won't happen in this
        // program) or there is a break statement. But the values of min
        // and max will stay the same until the program terminates.
        while (true)
        {
            // Call the random number generator method and store it in
            // an int variable
            int randno = Newnum(x, y);

            // This will be the counter for the number of times it took the
            // user to guess the number
            int count = 1;

            // This nested loop is an endless loop like the first loop.
            while (true)
            {
                Console.Write("Enter a number between {0} and {1} (0 to quit):",x,y);
                int input = Convert.ToInt32(Console.ReadLine());

                // This condition statement will terminate the program only if 0
                // is entered.
                if (input == 0)
                    return;

                // The two else if condition statement with the continue keyword
                // will resume the loop until the number is correctly guessed.
                // Each wrong guess will add 1 to the counter.
                else if (input < randno)
                {
                    Console.WriteLine("Low, try again.");
                    ++count;
                    continue;
                }
                else if (input > randno)
                {
                    Console.WriteLine("High, try again.");
                    ++count;
                    continue;
                }
                else
                {
                    Console.WriteLine("You guessed it! The number was {0}!",
                                       randno);
                    Console.WriteLine("It took you {0} {1}.\n", count,
                                       count == 1 ? "try" : "tries");
                    // This break statement will end the current while loop
                    // and revert to the first while loop. The range values
                    // do not change but a new random integer is generated
                    // and the count is set back to 1.
                    break;
                }
            }
        }
    }

    // This method passes two int variables, min
    // and max, which sets the range of a random number
    // generated by the Random class
    static int Newnum(int min, int max)
    {
        // Instantiates a new object called random
        Random random = new Random();

        // the Random.Next method returns a random
        // integer within the specified range
        return random.Next(min, max);
    }
}


// Modification:    Added comments. Modified to extend user interaction
//                  allowing user to specify the range of numbers.

// Analysis:        This simple program uses two while loops to have a
//                  seemingly endless guessing game. A random number
//                  is generated using a method that instantiates
//                  an object of Random class.

// Output:
// Welcome to a Guessing Game.Please
// Enter a minimum number greater than 0:
// 1
// Now please enter a maximum number:
// 10
// Generating a random number...
// Enter a number between 1 and 10 (0 to quit):5
// Low, try again.
// Enter a number between 1 and 10 (0 to quit):7
// You guessed it! The number was 7!
// It took you 2 tries.

// Enter a number between 1 and 10 (0 to quit):0
